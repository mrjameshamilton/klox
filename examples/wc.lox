var file = System.arg(0);

if (file == nil) {
    System.fail(Error("usage: wc FILE"));
} else {
    file = File(file);
}

fun isAlpha(c) {
    return c == "a" or c == "b" or c == "c" or c == "d" or c == "e" or
           c == "f" or c == "g" or c == "h" or c == "i" or c == "j" or
           c == "k" or c == "l" or c == "m" or c == "n" or c == "o" or
           c == "p" or c == "q" or c == "r" or c == "s" or c == "t" or
           c == "u" or c == "v" or c == "w" or c == "x" or c == "y" or
           c == "z" or c == "A" or c == "B" or c == "C" or c == "D" or
           c == "E" or c == "F" or c == "G" or c == "H" or c == "I" or
           c == "J" or c == "K" or c == "L" or c == "M" or c == "N" or
           c == "O" or c == "P" or c == "Q" or c == "R" or c == "S" or
           c == "T" or c == "U" or c == "V" or c == "W" or c == "X" or
           c == "Y" or c == "Z";
}

var chars = 0;
var words = 0;
var lines = 0;
var inputStream = FileInputStream(file);

fun nextWord(inputStream) {
    var c;

    fun count(word) {
        chars = chars + 1;
        if (c == "\n") lines = lines + 1;
        if (word) words = words + 1;
    }

    // look for a word
    while (c = inputStream.readChar()) {
        if (c is Error) System.fail(c);

        if (isAlpha(c)) {
            count(true);
            break;
        }

        count(false);
    }

    // count the next non-word characters
    while (c = inputStream.readChar()) {
        if (c is Error) System.fail(c);

        count(false);

        if (!isAlpha(c)) break;
    }

    return c != nil;
}

while (nextWord(inputStream)) {}

inputStream.close();

print lines + " " + words + " " + chars + " " + file;
