class InputStream {
    init() {
        System.fail(Error("InputStream cannot be instantiated."));
    }

    readByte() {
        System.fail(Error("Abstract method 'readByte'"));
    }

    readChar() {
        System.fail(Error("Abstract method 'readChar'"));
    }

    close() {
        System.fail(Error("Abstract method 'close"));
    }
}

class FileInputStream < InputStream {
    init(file) {
        this.file = file;
    }

    readByte() {
        System.fail(Error("Native implementation for 'readByte' not provided"));
    }

    readChar() {
        System.fail(Error("Native implementation for 'readChar' not provided"));
    }

    close() {
        System.fail(Error("Native implementation for 'close' not provided"));
    }
}

class OutputStream {
    init() {
        System.fail("InputStream cannot be instantiated.");
    }

    writeChar(c) {
        System.fail("Abstract method 'writeChar'");
    }

    writeByte(i) {
        System.fail("Abstract method 'writeInt'");
    }

    close() {
        System.fail("Abstract method 'close");
    }
}

class FileOutputStream < OutputStream {
    init(file) {
        this.file = file;
    }

    writeChar(c) {
        System.fail(Error("Native implementation for 'writeChar' not provided"));
    }

    writeByte(i) {
        System.fail(Error("Native implementation for 'writeInt' not provided"));
    }

    close() {
        System.fail(Error("Native implementation for 'close' not provided"));
    }
}

