class String {

    class length(str) {
        System.fail(Error("Native implementation for 'length' not provided."));
    }

    class substr(str, start, end) {
        System.fail(Error("Native implementation for 'substr' not provided."));
    }

    class charAt(str, index) {
        return String.substr(str, index, index + 1);
    }

    class indexOf(str, search, start) {
        if (start == nil) start = 0;

        var result = -1;
        var length = String.length(str);
        var searchLength = String.length(search);

        for (var i = start; i < length; i++) {
            var end = i + searchLength;
            if (end > length) end = length;
            if (String.substr(str, i, end).orElse(-1) == search) {
                result = i;
                break;
            }
        }
        return result;
    }

    class split(str, separator) {
        var result = ArrayList();
        var length = String.length(str);
        var separatorLength = String.length(separator);
        var start = 0;
        var pos = String.indexOf(str, separator, 0);

        while (pos >= start) {
            if (pos > start) {
                result.add(String.substr(str, start, pos).orElse(""));
            }
            start = pos + separatorLength;
            pos = String.indexOf(str, separator, start);
        }

        if (start < length) result.add(String.substr(str, start, length).orElse(""));

        return result;
    }

    class charCodeAt(str, index) {
        return Character.toCharCode(String.charAt(str, index)!?);
    }

    class toNumber(str) {
        System.fail(Error("Native implementation for 'toNumber' not provided."));
    }

    class toByteArray(str) {
        var length = String.length(str);
        var result = Array(length);
        for (var i = 0; i < length; i++) {
            result[i] = String.charCodeAt(str, i).orElse(0);
        }
        return result;
    }

    class fromByteArray(array) {
        var length = array.length();
        var result = "";
        for (var i = 0; i < length; i++) {
            result = result + Character.fromCharCode(array[i]);
        }
        return result;
    }
}

// Aliases for common top-level string functions.
var strlen = String.length;
var substr = String.substr;
