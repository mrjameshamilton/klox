/**
 * KLox `Error` class which indicates an error occurred.
 *
 * Can be used with `is` for error checking e.g.
 *
 * fun foo(a, b) {
 *     if (b == 0) return Error("Cannot divide by zero");
 *     else return a / b;
 * }
 *
 * var result = foo(1, 0);
 *
 * if (result is Error)
 *    print result.message;
 * else
 *    print result;
 */
class Error {
    init(message) {
        this.message = message;
    }

    toString() {
        return this.message;
    }
}

class Math {
    class PI {
        return 3.14159265358979323846;
    }

    class sqrt(x) {
        return Error("Native implementation for 'sqrt' not provided.");
    }
}

fun clock() {
    return Error("Native implementation for 'clock' not provided.");
}

fun strlen(str) {
    return Error("Native implementation for 'strlen' not provided.");
}

fun substr(str, start, end) {
    return Error("Native implementation for 'substr' not provided.");
}