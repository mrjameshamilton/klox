class File {
    init(path) {
        this.path = path;
    }

    toString() {
        return this.path;
    }

    native delete();

    readText() {
        var inputStream = BufferedInputStream(FileInputStream(this));
        var str = "";
        while (true) {
            var c = inputStream.readChar().mapError(fun (e) {
                inputStream.close();
                return e;
            })!?;

            if (c == nil) break; else str = str + c;
        }
        inputStream.close();
        return Ok(str);
    }

    writeText(text) {
        var outputStream = BufferedOutputStream(FileOutputStream(this));
        var length = String.length(text);

        for (var i = 0; i < length; i++) {
            var c = String.charAt(text, i).mapError(fun (e) {
                outputStream.close();
                return e;
            })!?;

            outputStream.writeChar(c);
        }
        outputStream.close();

        return Ok(true);
    }
}