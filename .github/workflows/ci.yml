# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Checkout crafting interpreters
        uses: actions/checkout@v2
        with:
          repository: munificent/craftinginterpreters
          path: craftinginterpreters
      - name: Copy craftinginterpreters tests
        run: |
          rm -rf src/test/resources/lox/book-tests
          mkdir src/test/resources/lox/book-tests
          cp -R craftinginterpreters/test src/test/resources/lox/book-tests
          git rm craftinginterpreters
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Lint
        uses: gradle/gradle-build-action@v1.5.1
        with:
          arguments: ktLintCheck --info
      - name: Build
        uses: gradle/gradle-build-action@v1.5.1
        with:
          arguments: build jacocoTestReport --info
      - name: jacoco-badge-generator
        uses: cicirello/jacoco-badge-generator@v2.4.1
        with:
          jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv
      - name: Update coverage bade
        run: |
          if [[ `git status --porcelain` ]]; then
            git config --global user.name 'James Hamilton'
            git config --global user.email 'mrjameshamilton@gmail.com'
            git add .github/badges/jacoco.svg
            git commit -m "Update autogenerated JaCoCo coverage badge"
            git push
          fi
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.19
        if: always()
        with:
          files: build/test-results/**/*.xml

